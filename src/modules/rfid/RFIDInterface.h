/**
 * @file RFIDInterface.h
 * @author Rennan Cockles (https://github.com/rennancockles)
 * @brief Interface for RFID modules
 * @version 0.1
 * @date 2024-08-19
 */


#ifndef __RFID_INTERFACE_H__
#define __RFID_INTERFACE_H__

#include <globals.h>


class RFIDInterface {
public:
    typedef struct {
        byte size;
        byte uidByte[10];
        byte sak;
        byte atqaByte[2];
    } Uid;

    typedef struct {
        String uid;
        String bcc;
        String sak;
        String atqa;
        String picc_type;
    } PrintableUID;

    typedef struct{
        byte begin = 0x03;
        byte messageSize;
        byte header = 0xD1;
        byte tnf = 0x01;
        byte payloadSize;
        byte payloadType;
        byte payload[140];
        byte end = 0xFE;
    } NdefMessage;

    enum ReturnCode {
        SUCCESS = 0,
        FAILURE = 1,
        TAG_NOT_PRESENT = 2,
        TAG_NOT_MATCH = 3,
        TAG_AUTH_ERROR = 4,
        NOT_IMPLEMENTED = 5,
    };

    enum NDEF_Payload_Type {
        NDEF_TEXT = 0x54,
        NDEF_URI = 0x55
    };

    uint8_t keys[48][6] = {
        { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF },
        { 0xA0, 0xA1, 0xA2, 0xA3, 0xA4, 0xA5 },
        { 0xB0, 0xB1, 0xB2, 0xB3, 0xB4, 0xB5 },
        { 0x4D, 0x3A, 0x99, 0xC3, 0x51, 0xDD },
        { 0x1A, 0x98, 0x2C, 0x7E, 0x45, 0x9A },
        { 0xAA, 0xBB, 0xCC, 0xDD, 0xEE, 0xFF },
        { 0x71, 0x4C, 0x5C, 0x88, 0x6E, 0x97 },
        { 0x58, 0x7E, 0xE5, 0xF9, 0x35, 0x0F },
        { 0xA0, 0x47, 0x8C, 0xC3, 0x90, 0x91 },
        { 0x53, 0x3C, 0xB6, 0xC7, 0x23, 0xF6 },
        { 0x8F, 0xD0, 0xA4, 0xF2, 0x56, 0xE9 },
        { 0xA6, 0x45, 0x98, 0xA7, 0x74, 0x78 },
        { 0x26, 0x94, 0x0B, 0x21, 0xFF, 0x5D },
        { 0xFC, 0x00, 0x01, 0x87, 0x78, 0xF7 },
        { 0x00, 0x00, 0x0F, 0xFE, 0x24, 0x88 },
        { 0xD3, 0xF7, 0xD3, 0xF7, 0xD3, 0xF7 },
        { 0xA1, 0xB2, 0xC3, 0xD4, 0xE5, 0xF6 },
        { 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6 },
        { 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F },
        { 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C },
        { 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F },
        { 0x5A, 0x5B, 0x5C, 0x5D, 0x5E, 0x5F },
        { 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F },
        { 0x7A, 0x7B, 0x7C, 0x7D, 0x7E, 0x7F },
        { 0x8A, 0x8B, 0x8C, 0x8D, 0x8E, 0x8F },
        { 0x9A, 0x9B, 0x9C, 0x9D, 0x9E, 0x9F },
        { 0xAA, 0xAB, 0xAC, 0xAD, 0xAE, 0xAF },
        { 0xBA, 0xBB, 0xBC, 0xBD, 0xBE, 0xBF },
        { 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF },
        { 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0xDF },
        { 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF },
        { 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0xFF },
        { 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F },
        { 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F },
        { 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F },
        { 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F },
        { 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F },
        { 0x5A, 0x5B, 0x5C, 0x5D, 0x5E, 0x5F },
        { 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F },
        { 0x7A, 0x7B, 0x7C, 0x7D, 0x7E, 0x7F },
        { 0x8A, 0x8B, 0x8C, 0x8D, 0x8E, 0x8F },
        { 0x9A, 0x9B, 0x9C, 0x9D, 0x9E, 0x9F },
        { 0xAA, 0xAB, 0xAC, 0xAD, 0xAE, 0xAF },
        { 0xBA, 0xBB, 0xBC, 0xBD, 0xBE, 0xBF },
        { 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF },
        { 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0xDF },
        { 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF },
        { 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0xFF }
    };

    Uid uid;
    PrintableUID printableUID;
    NdefMessage ndefMessage;
    String strAllPages = "";
    int totalPages = 0;
    int dataPages = 0;
    bool pageReadSuccess = false;
    int pageReadStatus = FAILURE;

    virtual ~RFIDInterface() {}  // Virtual destructor

    /////////////////////////////////////////////////////////////////////////////////////
    // Life Cycle
    /////////////////////////////////////////////////////////////////////////////////////
    virtual bool begin() = 0;

    /////////////////////////////////////////////////////////////////////////////////////
    // Operations
    /////////////////////////////////////////////////////////////////////////////////////
    virtual int read() = 0;
    virtual int clone() = 0;
    virtual int erase() = 0;
    virtual int write() = 0;
    virtual int write_ndef() = 0;
    virtual int load() = 0;
    virtual int save(String filename) = 0;

    String statusMessage(int status) const {
        switch (status) {
            case SUCCESS: return String(F("Success"));
            case FAILURE: return String(F("Failed reading data blocks"));
            case TAG_NOT_PRESENT: return String(F("Failed reading. Tag not found"));
            case TAG_NOT_MATCH: return String(F("Error! Tags don't match"));
            case TAG_AUTH_ERROR: return String(F("Failed authenticating"));
            case NOT_IMPLEMENTED: return String(F("Not implemented"));
            default: return String();
        }
    }
};

#endif
